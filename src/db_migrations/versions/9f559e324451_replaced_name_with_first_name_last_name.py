"""Replaced name with first_name, last_name

Revision ID: 9f559e324451
Revises: c2fcc7b7d903
Create Date: 2025-04-16 11:36:10.851165

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9f559e324451'
down_revision: Union[str, None] = 'c2fcc7b7d903'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First add the new columns as nullable
    op.add_column('user', sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    
    # Update existing rows - split the name into first_name and last_name
    op.execute("""
    UPDATE "user" 
    SET 
        first_name = CASE 
            WHEN position(' ' in name) > 0 THEN substring(name from 1 for position(' ' in name) - 1) 
            ELSE name 
        END,
        last_name = CASE 
            WHEN position(' ' in name) > 0 THEN substring(name from position(' ' in name) + 1) 
            ELSE '' 
        END
    """)
    
    # Now make the columns non-nullable
    op.alter_column('user', 'first_name', nullable=False)
    op.alter_column('user', 'last_name', nullable=False)
    
    # Finally drop the old name column
    op.drop_column('user', 'name')
    
    # Drop the tokenblacklist table if it exists
    try:
        op.drop_index('ix_tokenblacklist_token', table_name='tokenblacklist')
        op.drop_table('tokenblacklist')
    except Exception:
        # Table might not exist, so we can ignore errors
        pass
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_column('user', 'last_name')
    op.drop_column('user', 'first_name')
    op.create_table('tokenblacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tokenblacklist_pkey')
    )
    op.create_index('ix_tokenblacklist_token', 'tokenblacklist', ['token'], unique=True)
    # ### end Alembic commands ###
